HTTPメッセージについて
・Webブラウザからの要求である「HTTPリクエスト」
→3つに分けられる
　　・「リクエスト行」・・・サーバーに対して欲しい処理をリクエスト(例：GET /index.html)
　　・「メッセージヘッダー」 ・・・サーバーの種類、送信するデータの形式などの付加価値情報を記述。
　　・「メッセージボディ」・・・フォーム欄など入力されたテキストデータを送る目的で使用。

・Webサーバーからの応答である「HTTPレスポンス」
　・「ステータス行」・・・ブラウザから受け取った処理結果を伝える(例：HTTP/1.1 200 OK)
　・「メッセージヘッダー」・・・サーバーの種類データ形式など記載
　・「メッセージボディ」・・・ブラウザからリクエストされたHTMLデータなど格納

「HTTPメソッド」・・・リクエストから具体的な要求内容を伝えている。
「GETメソッド」・・・HTML、画像ファイルなどのコンテンツを取得。
「POSTメソッド」・・・データをサーバーへ送信、フォームに入力した情報(メアド、パスワードなど)を転送する場合に利用する

ステータスコードについて
〇100番台・・・continue(継続中)
〇400番台・・・クライアントのエラーであることを通知(URLが見つからない、Not Foundなど)
〇200番台・・・OK(正常に受理)
〇500番台・・・サーバーのエラーであることを通知(サーバー内部でエラー発生、アクセス集中、メンテナンスなど)
〇300番台・・・リクエストに対して、転送処理などが必要であることを通知する（URLが変更されていたなど）

TCPについて
WEbサイトの閲覧だけでなく、メールの送受信やデータ転送時にも利用される。
その際に、クライアントとサーバーが「コネクション」と呼ばれる通信経路を確立してからデータのやり取りを行う。
確率は次の3回のやり取りを行う
1.クライアントからサーバーへ接続を要求するための「SYNパケット」というデータを送る
2.信頼性のあるデータ通信を実現するために、データ送信後、必ず送信相手からの確認応答(ACKパケット)を受け取る。同時に接続要求を行う。
3.サーバーからの接続要求に対してクライアントはACKパケットを送信する。

HTTP1.1について
HTTPキープアライブ・・・HTTPリクエストごとに通信経路を確立することなく、継続して利用できる方式。
HTTPパイプライン・・・HTTPリクエストに対するHTTPレスポンスを待つことなく、複数の　HTTPリクエストを送る機能。

HTTP/2について
1つのコネクション上に「ストリーム」と呼ばれる仮想的な通信経路を複数生成し、そこでリクエストとレスポンスのやり取りを行う。
バイナリ形式(リクエストをフレームに分けて送信)、
ヘッダー圧縮(重複したデータを省き、差分のみ転送する)、
サーバープッシュ(リクエスト内容を元に、必要なファイルを判別して、地クエストなしに事前にサーバーから転送)


サイト利用に、クレジットカード情報、データ改ざん、なりすましサイトから個人情報など大切なデータを守るシステムを
「HTTPS」という。
正式名称：HTTP over SSL[Secure Sockets Layer]/TLS[Transport Layer Security]
3つの仕組みで安全性を確保
1.盗聴防止
　データを暗号化させて送信する。
2.改ざん防止
　「メッセージダイジェスト」（データから一意の短いデータ(ハッシュ値)を取り出す計算方法)を利用する。
3.なりすまし防止
　サーバーに「SSL　サービス証明書」と呼ばれる電子証明書を配置することで、サイトを運営する会社の身元を確認する。
　証明書は「認証局」による運営元の認証作業を通過する必要がある。

認証されていれば、http→httpsになる。

次の4つフェーズのやり取りを行う必要がある。
1.暗号化方式の決定
2.通信相手の証明
3.鍵の交換
4.暗号化方式の確認
これら４つのフェーズを「SSL/TLS ハンドシェイク」と呼ばれる。

状態を保持しておき、以降のやり取りでも覚えていること「ステートフル」　という。
状態を保持せずに、毎回リセットするものを「ステートスレ」


ショッピングサイトなどで、状態を保持して管理するものに、「Cookie」と呼ばれるデータが用いられる。
そのデータの送信に、メッセージヘッダーが利用される
サーバーは、レスポンスに「Set-Cookie」ヘッダーを含めることで送信できて、
ブラウザはリクエストに、「Cookie」ヘッダーを含めることで送信できる

有効期限が設定されていないCookieは、ブラウザが閉じられると同時に削除される。これを「セッション Cookie」と呼ぶ。
有効期限が設定されたCookieは、ブラウザを閉じても削除されず、有効期限が来るまで残る。

ブラウザとサーバーのやり取りにおいて、一連の関連性のある処理の流れを「セッション」という。
セッション管理において、ブラウザを識別するための情報を「セッションID」という。

情報やデータ(人、会社、書籍など)といったリソースを識別するための記述方法を「URI(Uniform Resource Identifier)」という。
リソースが示す場所(ネットにおける住所のこと)をURL(Uniform Resource Locator)という。

リソースの名前のみを示すものをURN(Uniform Resource Name)という。書籍を一意に特定するのもこれ。
HTTPリクエストの場合、リクエストの行のメソッドに続いて記述されるため、「リクエストURI」とも呼ばれる。
絶対URI形式と相対URI形式があり、通常は相対URI形式で記述される。

パーセントエンコーディング・・・%の後に文字コードを16進数で表した形に変換される。
